name: "Rust CI"

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: rustfmt
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Check formatting
        run: cargo fmt --all -- --check

  checks:
    name: clippy + tests (${{ matrix.features || 'default features' }})
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        features:
          - ""
          - "--no-default-features"
          - "--all-features"

    steps:
      - uses: actions/checkout@v5
      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install system dependencies (Linux)
        if: contains(matrix.features, '') || contains(matrix.features, '--no-default-features')
        run: |
          sudo apt-get update -y
          sudo apt-get install --no-install-recommends libudev-dev

      - name: Run Clippy
        run: |
          cargo clippy --all-targets ${{ matrix.features }} --locked -- \
           -D warnings \
           -D clippy::pedantic \
           -A clippy::too_many_lines

      - name: Run tests
        run: cargo test ${{ matrix.features }} --locked --verbose
